spring:
  profiles:
    default: dev

---
# docker 환경에서 실행할 경우 사용하는 설정(자바 실행 시 프로파일 정보를 dev 로 설정한다. -Dspring.profiles.active=dev  기본값이 dev 이므로 생략 가능하다.)
kafka:
  clusters:
    bootstrapservers: kafka:29092
  task:
    logging:
      topic: simplepay.logging.out.stdout

# service 요청 주소: docker 내부에서 사용하는 주소와 포트로 설정한다.(docker-compose.yml 파일의 service 이름과 포트로 동일하게 설정한다.)
service:
  membership:
    url: http://membership-service:8080

spring:
  config:
    activate:
      on-profile: dev
  datasource:
    hikari:
      driver-class-name: com.mysql.cj.jdbc.Driver
      jdbc-url: jdbc:mysql://mysql:3306/simple_pay?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
      username: simplepay
      password: simplepay
  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQL57Dialect
    defer-datasource-initialization: true
  sql:
    init:
      mode: always

---
# 단독으로 실행할 경우 사용하는 설정(자바 실행 시 프로파일 정보를 local 로 설정한다. -Dspring.profiles.active=local)
server:
  port: 8092

kafka:
  clusters:
    bootstrapservers: localhost:9092
  task:
    logging:
      topic: simplepay.logging.out.stdout

# service 요청 주소: local 환경에서는 docker 외부에서 호출 시 사용하는 주소를 설정한다.
service:
  membership:
    url: http://localhost:8081   # docker 설정 8081 포트 -> 8080 포트로 연결

spring:
  config:
    activate:
      on-profile: local
  #H2
  h2:
    console:
      enabled: true
      path: /h2-console
  #Database
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:test
    username: SA
    password:

  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql:
    defer-datasource-initialization: true

  sql:
    init:
      mode: always